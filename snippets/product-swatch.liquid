{%- comment -%}
  Renders a product color swatch

  Accepts:
   - colors_for_check {String}: Coma separated color names with to check from settings for match. Example: 'red, dark-red, dark-blue'
   - class {String}: Additional css classes for js or styling
   - input_class {String}: Additional css classes on the input element for js or styling
   - attr {String}: Additional HTML Attributes for accessability or js
   - id {String}: Input id
   - show_label {Bool}: Show input label
   - input_type: {String}: Input element type
   - value: {String}: Input element value
{%- endcomment -%}
{%- liquid
  assign option_value_handle = value | handle
  assign class = class | default: ''
  assign input_class = input_class | default: ''
  assign attr = attr | default: ''
  assign id = id | default: option_value_handle
  assign input_type = input_type | default: 'radio'
  assign name = name | default: 'Swatch'
  assign visually_hidden = visually_hidden | default: true
-%}
<input
  id="{{- id -}}"
  type="{{- input_type -}}"
  name="{{- name -}}"
  class="{% unless visually_hidden == 'false' %}visually-hidden{% endunless %} {{ input_class }}"
  {% if value != blank %}value="{{- value | escape -}}"{% endif %}
  data-color="{{- value | escape -}}"
  aria-label="{{- value | escape -}}"
  {% if back_in_stock %}data-stock="back-in-stock"{% endif %}
  {% if variant_id %}data-variant="{{variant_id}}"{% endif %}
  {{ attr }}
/>

<label
  for="{{- id -}}"
  class="swatch {{ settings.product_swatch_style }} swatch--{{ option_value_handle }} {{ class }}"
  {% unless colors_for_check contains option_value_handle %}
    style="background-color: {{ value | downcase | replace: ' ', '' }};"
  {% endunless %}
  title="{{- value -}}"
>
  <span {% unless show_label %}class="visually-hidden"{% endunless %}>
    {{- value -}}
  </span>
</label>

<style>
  .size-toggle {
    display: flex;
    border: 1px solid #000;
    width: 100%;
    margin-bottom: 1rem;
    margin-top: 16.2px;
  }

  .size-toggle button {
    background: white;
    width: 50%;
    border: none;
    padding: 10px 20px;
    cursor: pointer;
    font-weight: bold;
  }

  .size-toggle button.active {
    background: black;
    color: white;
  }

  .size-chart-table-wrapper {
    overflow-x: auto;
  }

  .size-chart-table {
    width: 100%;
    border-collapse: collapse;
    margin-bottom: 2rem;
  }

  .size-chart-table th,
  .size-chart-table td {
    text-align: left;
    padding: 10px;
    border-bottom: 1px solid #ccc;
    width: calc(100% / 6);
    min-width: 103px;
    text-align: center;
  }

  .unit-table {
    display: none;
  }

  .unit-table.active {
    display: table;
  }
</style>
{%- liquid
  assign product_id = product.id | default: section.settings.default_product.id
  assign url = routes.product_recommendations_url | append: '?section_id=' | append: section.id | append: '&product_id=' | append: product_id | append: '&limit=10&intent=complementary'
  assign show_products = true
  if section.settings.content_type == 'image'
    assign show_products = false
  endif
  capture section_style_classes
    echo section.settings.padding_vertical_desktop | append: ' '
    echo section.settings.padding_vertical_mobile | append: ' '
    echo section.settings.color_scheme_text | append: ' '
    echo section.settings.color_scheme_background | append: ' '
    if section.settings.flip_desktop
      echo 'section-complete-the-set--flipped-desktop '
    endif
    if section.settings.flip_mobile
      echo 'section-complete-the-set--flipped-mobile '
    endif
  endcapture
-%}

{{- 'section-complete-the-set.css' | asset_url | stylesheet_tag -}}

{%- if show_products -%}
  {{- 'component-card-product-slider.css' | asset_url | stylesheet_tag -}}
  {{- 'component-card-product.css' | asset_url | stylesheet_tag -}}

  <script src="{{- 'card-product-slider.js' | asset_url -}}" defer="defer"></script>
  <script src="{{- 'complementary-products.js' | asset_url -}}" defer="defer"></script>
  <script src="{{- 'card-product.js' | asset_url -}}" defer="defer"></script>
  <script src="{{- 'collapsible-button.js' | asset_url -}}" defer="defer"></script>
{%- endif -%}

{%- unless show_products == false and section.blocks.size == 0 -%}
  <section
    class="section section-complete-the-set js-animation-fade-in {{ section_style_classes }}"
    data-section-id="{{- section.id -}}"
  >
    <div class="container section__container">
      <div class="grid section__grid {% if section.blocks.size > 0 and section.settings.featured_image != blank or section.blocks.size > 0 and show_products == true %} grid--2 {% else %} section__grid--centered {% endif %}">
        {%- unless show_products == false and section.settings.featured_image == blank -%}
          <div class="grid__item {% if show_products %} hidden {% endif %} overflow-hidden">
            <header class="section__head flex flex--center flex--justify">
              {%- if section.settings.title != blank -%}
                <h3 class="section__title">
                  {{- section.settings.title -}}
                </h3>
              {%- endif -%}

              {% if show_products %}
                <div class="swiper-buttons small-hide svg-color-inherit section__slider-buttons no-js-hidden">
                  <button class="swiper-button swiper-button--prev">
                    {%- render 'icon-arrow-end-small' -%}
                  </button>
                  <button class="swiper-button swiper-button--next">
                    {%- render 'icon-arrow-end-small' -%}
                  </button>
                </div>
              {% endif %}
            </header>

            {%- if show_products -%}

              {% liquid
                assign slides_per_view_desktop = 2
                if section.blocks.size < 1
                  assign slides_per_view_desktop = 4
                endif
              %}

              <complementary-products
                class="swiper section__slider card-product-slider card-product-slider--secondary"
                data-swiper-options='{"slidesPerViewDesktop": {{ slides_per_view_desktop | default: '2' }}}'
                {% if show_products %} data-url="{{- url -}}" {% endif %}
              >
                <div class="swiper-wrapper card-product-slider__wrapper">
                  {%- if recommendations.performed and recommendations.products_count > 0 -%}
                    {%- for recommendation in recommendations.products -%}
                      <div class="swiper-slide card-product-slider__slide">
                        {%- render 'card-product', product_ref: recommendation, section_id: section.id, card_index: forloop.index, card_product_layout: settings.card_product_layout -%}
                      </div>
                    {%- endfor -%}
                  {%- endif -%}
                </div>
              </complementary-products>
            {%- elsif section.settings.featured_image != blank -%}
              <div class="section__media media">
                {%- render 'image', image: section.settings.featured_image, image_per_view: 2, alt: section.settings.featured_image.alt | default: section.settings.title | escape -%}
              </div>
            {%- endif -%}
          </div>
        {%- endunless -%}
        <div class="grid__item section__buttons">
          {%- for block in section.blocks -%}
            {%- if block.settings.button_type == 'link' and block.settings.button_text != blank and block.settings.button_url != blank -%}
              <a href="{{- block.settings.button_url -}}" class="section__drawer-button link svg-color-inherit" {{ block.shopify_attributes }}>
                {{ block.settings.button_text }}
                {% render 'icon-chevron-end' %}
              </a>
            {%- elsif block.settings.button_type == 'drawer' and block.settings.drawer_page != blank or block.settings.drawer_richtext != blank -%}
              <menu-drawer class="section__drawer" {{ block.shopify_attributes }}>
                <details id="Complementary-{{ forloop.index0 }}-drawer" class="drawer__container">
                  <summary class="drawer__button drawer__button--text section__drawer-button link svg-color-inherit">
                    <span class="drawer__button-text">
                      {{- block.settings.button_text -}}
                    </span>
                    {% render 'icon-chevron-end' %}
                  </summary>

                  <div class="drawer__content js-drawer" id="Complementary-{{ forloop.index0 }}-menu-drawer" tabindex="-1">
                    <button
                      class="drawer__button-close button-reset no-js-hidden js-btn-close-drawer svg-color-inherit"
                      aria-label="{{- 'accessibility.close' | t -}}"
                      aria-controls="Complementary-{{ forloop.index0 }}-menu-drawer"
                      aria-expanded="false"
                    >
                      {%- render 'icon-close' -%}
                    </button>

                    <div class="drawer__row drawer__row--gutter-sm">
                      <h2 class="drawer__title heading-static">
                        {%- if block.settings.drawer_page != blank and block.settings.hide_page_title == false -%}
                          {{- block.settings.drawer_page.title -}}
                        {%- else -%}
                          {{- block.settings.button_text -}}
                        {%- endif -%}
                      </h2>

                      <div class="rte">
                        {% if block.settings.use_metafield %}
                          {% if product.metafields.custom.product_size %}
                            {{ product.metafields.custom.product_size | metafield_tag }}
                          {% else %}
                            {%- if block.settings.drawer_page != blank -%}
                              {{- block.settings.drawer_page.content -}}
                              {% assign data = block.settings.drawer_page.metafields.custom.sizing.value.page.units %}
                            
                              {% if data != blank %}
                                <div class="size-chart-section">
                                  <div class="size-toggle">
                                    <button class="unit-btn active" data-unit="cm">cm</button>
                                    <button class="unit-btn" data-unit="inches">in</button>
                                  </div>
                          
                                    <!-- CM Table -->
                                    <div class="size-chart-table-wrapper">
                                      <table class="size-chart-table unit-table active" id="unit-cm">
                                        <thead>
                                          <tr>
                                            {% for col in data.cm.columns %}
                                              <th>{{ col }}</th>
                                            {% endfor %}
                                          </tr>
                                        </thead>
                                        <tbody>
                                          {% for row in data.cm.data %}
                                            <tr>
                                              {% for col in data.cm.columns %}
                                                <td>{{ row[col] }}</td>
                                              {% endfor %}
                                            </tr>
                                          {% endfor %}
                                        </tbody>
                                      </table>
                          
                                      <!-- Inches Table -->
                                      <table class="size-chart-table unit-table" id="unit-inches">
                                        <thead>
                                          <tr>
                                            {% for col in data.inches.columns %}
                                              <th>{{ col }}</th>
                                            {% endfor %}
                                          </tr>
                                        </thead>
                                        <tbody>
                                          {% for row in data.inches.data %}
                                            <tr>
                                              {% for col in data.inches.columns %}
                                                <td>{{ row[col] }}</td>
                                              {% endfor %}
                                            </tr>
                                          {% endfor %}
                                        </tbody>
                                      </table>
                                    </div>
                                </div>
                              {% endif %}
                            {%- elsif block.settings.drawer_richtext contains '[description]' -%}
                              {{- product.description -}}
                            {%- elsif block.settings.drawer_richtext != blank -%}
                              {{- block.settings.drawer_richtext -}}
                            {%- endif -%}
                          {% endif %}
                        {% else %}
                          {%- if block.settings.drawer_page != blank -%}
                            {{- block.settings.drawer_page.content -}}
                            {% assign data = block.settings.drawer_page.metafields.custom.sizing.value.page.units %}
                            
                            {% if data != blank %}
                              <div class="size-chart-section">
                                <div class="size-toggle">
                                  <button class="unit-btn active" data-unit="cm">cm</button>
                                  <button class="unit-btn" data-unit="inches">in</button>
                                </div>
                        
                                  <!-- CM Table -->
                                  <div class="size-chart-table-wrapper">
                                    <table class="size-chart-table unit-table active" id="unit-cm">
                                      <thead>
                                        <tr>
                                          {% for col in data.cm.columns %}
                                            <th>{{ col }}</th>
                                          {% endfor %}
                                        </tr>
                                      </thead>
                                      <tbody>
                                        {% for row in data.cm.data %}
                                          <tr>
                                            {% for col in data.cm.columns %}
                                              <td>{{ row[col] }}</td>
                                            {% endfor %}
                                          </tr>
                                        {% endfor %}
                                      </tbody>
                                    </table>
                        
                                    <!-- Inches Table -->
                                    <table class="size-chart-table unit-table" id="unit-inches">
                                      <thead>
                                        <tr>
                                          {% for col in data.inches.columns %}
                                            <th>{{ col }}</th>
                                          {% endfor %}
                                        </tr>
                                      </thead>
                                      <tbody>
                                        {% for row in data.inches.data %}
                                          <tr>
                                            {% for col in data.inches.columns %}
                                              <td>{{ row[col] }}</td>
                                            {% endfor %}
                                          </tr>
                                        {% endfor %}
                                      </tbody>
                                    </table>
                                  </div>
                              </div>
                            {% endif %}
                          {%- elsif block.settings.drawer_richtext contains '[description]' -%}
                            {{- product.description -}}
                          {%- elsif block.settings.drawer_richtext != blank -%}
                            {{- block.settings.drawer_richtext -}}
                          {%- endif -%}
                        {% endif %}
                      </div>
                    </div>
                  </div>
                </details>
              </menu-drawer>
            {%- elsif block.settings.button_type == 'drawer' and block.settings.button_text == 'Reviews' -%}
              <menu-drawer class="section__drawer" {{ block.shopify_attributes }}>
                <details id="Complementary-{{ forloop.index0 }}-drawer" class="drawer__container">
                  <summary class="drawer__button drawer__button--text section__drawer-button link svg-color-inherit">
                    <span class="drawer__button-text">
                      {{- block.settings.button_text -}}
                    </span>
                    {% render 'icon-chevron-end' %}
                  </summary>

                  <div class="drawer__content js-drawer" id="Complementary-{{ forloop.index0 }}-menu-drawer" tabindex="-1">
                    <button
                      class="drawer__button-close button-reset no-js-hidden js-btn-close-drawer svg-color-inherit"
                      aria-label="{{- 'accessibility.close' | t -}}"
                      aria-controls="Complementary-{{ forloop.index0 }}-menu-drawer"
                      aria-expanded="false"
                    >
                      {%- render 'icon-close' -%}
                    </button>

                    <div class="drawer__row drawer__row--gutter-sm">
                      <div class="rte">
                        {% render 'judgeme_widgets', widget_type: 'judgeme_review_widget', concierge_install: true, product: product %}
                      </div>
                    </div>
                  </div>
                </details>
              </menu-drawer>

            {%- elsif block.settings.button_type == 'collapsible' and block.settings.drawer_page != blank or block.settings.drawer_richtext != blank -%}

              <div class="section__drawer" {{ block.shopify_attributes }}>
                <div id="Complementary-{{ forloop.index0 }}-collapsible" class="drawer__container">
                  <div class="drawer__button drawer__button--text section__drawer-button link svg-color-inherit collapsible__button">
                    <span class="drawer__button-text">
                      {{- block.settings.button_text -}}
                    </span>
                    {% render 'icon-chevron-end' %}
                  </div>
                  <div class="collapsible__content">
                    <div class="drawer__row drawer__row--gutter-sm">
                      <div class="rte">
                        {%- if block.settings.drawer_page != blank -%}
                          {{- block.settings.drawer_page.content -}}
                        {%- elsif block.settings.drawer_richtext contains '[description]' -%}
                          {{- product.description -}}
                        {%- elsif block.settings.drawer_richtext != blank -%}
                          {{- block.settings.drawer_richtext -}}
                        {%- endif -%}
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            {%- endif -%}
          {%- endfor -%}
        </div>
      </div>
    </div>
  </section>
{%- endunless -%}
<script>
  document.addEventListener('DOMContentLoaded', function () {
    const buttons = document.querySelectorAll('.unit-btn');
    const tables = document.querySelectorAll('.unit-table');

    buttons.forEach(button => {
      button.addEventListener('click', function () {
        const unit = this.getAttribute('data-unit');

        buttons.forEach(btn => btn.classList.remove('active'));
        this.classList.add('active');

        tables.forEach(table => {
          if (table.id === 'unit-' + unit) {
            table.classList.add('active');
          } else {
            table.classList.remove('active');
          }
        });
      });
    });
  });
</script>
{% schema %}
{
  "name": "t:sections.complete-the-set.name",
  "settings": [
    {
      "type": "header",
      "content": "t:sections.global.settings.header_padding_vertical.content"
    },
    {
      "type": "select",
      "id": "padding_vertical_desktop",
      "label": "t:sections.global.settings.padding_vertical_desktop.label",
      "options": [
        {
          "value": "",
          "label": "t:sections.global.settings.padding_vertical_desktop.options.default.label"
        },
        {
          "value": "pt-0-desktop",
          "label": "t:sections.global.settings.padding_vertical_desktop.options.top_none.label"
        },
        {
          "value": "pb-0-desktop",
          "label": "t:sections.global.settings.padding_vertical_desktop.options.bottom_none.label"
        },
        {
          "value": "pt-0-desktop pb-0-desktop",
          "label": "t:sections.global.settings.padding_vertical_desktop.options.top_bottom_none.label"
        }
      ]
    },
    {
      "type": "select",
      "id": "padding_vertical_mobile",
      "label": "t:sections.global.settings.padding_vertical_mobile.label",
      "options": [
        {
          "value": "",
          "label": "t:sections.global.settings.padding_vertical_mobile.options.default.label"
        },
        {
          "value": "pt-0-mobile",
          "label": "t:sections.global.settings.padding_vertical_mobile.options.top_none.label"
        },
        {
          "value": "pb-0-mobile",
          "label": "t:sections.global.settings.padding_vertical_mobile.options.bottom_none.label"
        },
        {
          "value": "pt-0-mobile pb-0-mobile",
          "label": "t:sections.global.settings.padding_vertical_mobile.options.top_bottom_none.label"
        }
      ]
    },
    {
      "type": "header",
      "content": "t:sections.global.settings.header_color_scheme.content"
    },
    {
      "type": "select",
      "id": "color_scheme_text",
      "label": "t:sections.global.settings.color_scheme_text.label",
      "options": [
        {
          "value": "text-colors-default",
          "label": "t:sections.global.settings.color_scheme_text.options.default.label"
        },
        {
          "value": "text-colors-secondary",
          "label": "t:sections.global.settings.color_scheme_text.options.secondary.label"
        },
        {
          "value": "text-colors-inverse",
          "label": "t:sections.global.settings.color_scheme_text.options.inverse.label"
        }
      ],
      "default": "text-colors-default"
    },
    {
      "type": "select",
      "id": "color_scheme_background",
      "label": "t:sections.global.settings.color_scheme_background.label",
      "options": [
        {
          "value": "background-colors-default",
          "label": "t:sections.global.settings.color_scheme_background.options.default.label"
        },
        {
          "value": "background-colors-secondary",
          "label": "t:sections.global.settings.color_scheme_background.options.secondary.label"
        },
        {
          "value": "background-colors-accent-1",
          "label": "t:sections.global.settings.color_scheme_background.options.accent_one.label"
        },
        {
          "value": "background-colors-accent-2",
          "label": "t:sections.global.settings.color_scheme_background.options.accent_two.label"
        },
        {
          "value": "background-colors-inverse",
          "label": "t:sections.global.settings.color_scheme_background.options.inverse.label"
        }
      ],
      "default": "background-colors-default"
    },
    {
      "type": "header",
      "content": "t:sections.complete-the-set.settings.header_content.content"
    },
    {
      "type": "text",
      "id": "title",
      "label": "t:sections.complete-the-set.settings.title.label",
      "default": "Complete the set"
    },
    {
      "type": "select",
      "id": "content_type",
      "label": "t:sections.complete-the-set.settings.content_type.label",
      "info": "t:sections.complete-the-set.settings.content_type.info",
      "options": [
        {
          "value": "image",
          "label": "t:sections.complete-the-set.settings.content_type.options.option_1.label"
        },
        {
          "value": "products",
          "label": "t:sections.complete-the-set.settings.content_type.options.option_2.label"
        }
      ],
      "default": "products"
    },
    {
      "type": "image_picker",
      "id": "featured_image",
      "label": "t:sections.complete-the-set.settings.featured_image.label"
    },
    {
      "type": "product",
      "id": "default_product",
      "label": "t:sections.complete-the-set.settings.default_product.label",
      "info": "t:sections.complete-the-set.settings.default_product.info"
    },
    {
      "type": "header",
      "content": "t:sections.complete-the-set.settings.header_layout.content"
    },
    {
      "type": "checkbox",
      "id": "flip_desktop",
      "label": "t:sections.complete-the-set.settings.flip_content_position.label",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "flip_mobile",
      "label": "t:sections.complete-the-set.settings.flip_mobile_positions.label",
      "default": true
    }
  ],
  "blocks": [
    {
      "type": "popup-drawer",
      "name": "t:sections.complete-the-set.blocks.popup-drawer.name",
      "settings": [
        {
          "type": "header",
          "content": "t:sections.complete-the-set.blocks.popup-drawer.settings.header_button.content"
        },
        {
          "type": "checkbox",
          "id": "use_metafield",
          "label": "Use metafield",
          "info": "Pull sizing information from metafield"
        },
        {
          "type": "checkbox",
          "id": "hide_page_title",
          "label": "Hide page title",
        },
        {
          "type": "text",
          "id": "button_text",
          "label": "t:sections.complete-the-set.blocks.popup-drawer.settings.button_text.label"
        },
        {
          "type": "select",
          "id": "button_type",
          "label": "t:sections.complete-the-set.blocks.popup-drawer.settings.button_type.label",
          "options": [
            {
              "value": "link",
              "label": "t:sections.complete-the-set.blocks.popup-drawer.settings.button_type.options.option_1.label"
            },
            {
              "value": "drawer",
              "label": "t:sections.complete-the-set.blocks.popup-drawer.settings.button_type.options.option_2.label"
            },
            {
              "value": "collapsible",
              "label": "t:sections.complete-the-set.blocks.popup-drawer.settings.button_type.options.option_3.label"
            }
          ],
          "default": "drawer"
        },
        {
          "type": "url",
          "id": "button_url",
          "label": "t:sections.complete-the-set.blocks.popup-drawer.settings.button_url.label"
        },
        {
          "type": "header",
          "content": "t:sections.complete-the-set.blocks.popup-drawer.settings.header_drawer.content"
        },
        {
          "type": "richtext",
          "id": "drawer_richtext",
          "label": "t:sections.complete-the-set.blocks.popup-drawer.settings.drawer_richtext.label",
          "info": "t:sections.complete-the-set.blocks.popup-drawer.settings.drawer_richtext.info"
        },
        {
          "type": "page",
          "id": "drawer_page",
          "label": "t:sections.complete-the-set.blocks.popup-drawer.settings.drawer_page.label",
          "info": "t:sections.complete-the-set.blocks.popup-drawer.settings.drawer_page.info"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "t:sections.complete-the-set.name",
      "blocks": [
        {
          "type": "popup-drawer",
          "settings": {
            "button_text": "Description",
            "drawer_richtext": "<p>[description]</p>"
          }
        },
        {
          "type": "popup-drawer",
          "settings": {
            "button_text": "Contact us",
            "button_type": "link",
            "button_url": "/pages/contact"
          }
        }
      ]
    }
  ]
}
{% endschema %}
